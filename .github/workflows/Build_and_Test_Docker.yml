name: 构建和测试 Docker 镜像

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'src/**'
      - 'webui/**'
      - 'Dockerfile'
      - 'requirements.txt'
      - 'pyproject.toml'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - 'webui/**'
      - 'Dockerfile'
      - 'requirements.txt'
      - 'pyproject.toml'

jobs:
  test-docker:
    runs-on: ubuntu-latest
    
    steps:
      - name: 拉取源码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 构建测试镜像
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: tiktok-downloader:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 测试镜像启动
        run: |
          # 启动容器
          echo "🚀 启动Docker容器..."
          docker run -d --name test-container \
            -p 5555:5555 \
            -e PYTHONUNBUFFERED=1 \
            tiktok-downloader:test
          
          # 检查容器状态
          echo "📊 检查容器状态..."
          docker ps -a --filter name=test-container
          
          # 等待服务启动
          echo "⏱️ 等待服务启动（30秒）..."
          sleep 30
          
          # 再次检查容器状态
          echo "📊 服务启动后容器状态..."
          docker ps -a --filter name=test-container
          
          # 检查容器是否还在运行
          if ! docker ps --filter name=test-container --filter status=running | grep -q test-container; then
            echo "❌ 容器已停止运行，查看日志："
            docker logs test-container
            exit 1
          fi
          
          # 测试健康检查
          echo "🏥 测试健康检查端点..."
          docker exec test-container curl -f http://localhost:5555/health || exit 1
          
          # 测试Web UI
          echo "🌐 测试Web UI..."
          curl -f http://localhost:5555/ || exit 1
          
          # 测试API文档
          echo "📚 测试API文档..."
          curl -f http://localhost:5555/docs || exit 1
          
          echo "✅ Docker镜像测试通过"

      - name: 查看容器日志
        if: failure()
        run: |
          docker logs test-container

      - name: 清理测试容器
        if: always()
        run: |
          docker stop test-container || true
          docker rm test-container || true
